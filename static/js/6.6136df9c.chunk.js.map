{"version":3,"file":"static/js/6.6136df9c.chunk.js","mappings":"mPAEaA,E,OAAQC,EAAAA,MAAH,mE,SCIZC,GAAcC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAiEzB,EA/De,WACb,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,IAAjD,eAAOK,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KAkBMC,EAAQ,WACZR,EAAS,GACV,EAqBD,OAnBAS,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRC,EAAK,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,GACvCD,GACFR,EAAQQ,GAENT,KACFW,EAAAA,EAAAA,GAAW,mDAAD,OAC2CX,EAD3C,8CAGPY,MAAK,SAAAC,GACJV,GAAgB,OAAIU,EAASC,SAC9B,IACAC,OAAM,WACLC,QAAQC,IAAI,QACb,IACHV,IAEH,GAAE,CAACF,EAAcC,EAAiBN,KAGjC,iCACE,kBAAMkB,SApCW,SAAAC,GAEnB,GADAA,EAAEC,iBACmB,KAAjBtB,EAAMuB,OACR,OAAOC,EAAAA,GAAAA,MAAY,oBAErBrB,EAAQH,GACRQ,EAAgB,CAAEG,MAAOX,IAEzBS,GACD,EA2BG,WACE,SAACd,EAAD,CACE8B,KAAK,OACLC,aAAa,MACb1B,MAAOA,EACP2B,SA9Ca,SAAAN,GACnB,IAAQrB,EAAUqB,EAAEO,cAAZ5B,MACRC,EAASD,EACV,KA6CK,mBAAQyB,KAAK,SAAb,wBAEF,wBACG,CAACrB,EAAayB,SACbzB,EAAa0B,KAAI,SAAAC,GAAI,OAAI,SAAClC,EAAD,CAA2BkC,KAAMA,GAAfA,EAAKC,GAA3B,QAI9B,C,sBCtED,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBxC,EAAQyC,EAAKzC,KAInB,CAHE,MAAO0C,GAEP,YADAN,EAAOM,EAET,CACID,EAAKE,KACPR,EAAQnC,GAER4C,QAAQT,QAAQnC,GAAOc,KAAKuB,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAMrC,GACbiC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQtC,EAClE,CACA,SAASsC,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,C,sDC7BexC,SAAAA,IAAf,OAAeA,EAAAA,EAAAA,IAAAA,MAAf,WAA0BF,GAA1B,uFACyB2C,MAAM3C,GAD/B,YACQI,EADR,QAEewC,GAFf,yCAGWxC,EAASyC,QAHpB,uBAKeZ,QAAQR,OAAO,IAAIqB,MAAM,UALxC,0GAOA,M,SAP0B,GAAX5C,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C","sources":["pages/Movies.styled.jsx","pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","servises/fetchQuery.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  margin-top: 20px;\n  margin-left: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport fetchQuery from 'servises/fetchQuery';\nimport { useSearchParams } from 'react-router-dom';\nimport { Input } from 'pages/Movies.styled';\nimport { lazy } from 'react';\nconst GalleryItem = lazy(() => import('components/GalleryItem/GalleryItem'));\n\nconst Movies = () => {\n  const [value, setValue] = useState('');\n  const [film, setFilm] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n\n  const handleChange = e => {\n    const { value } = e.currentTarget;\n    setValue(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (value.trim() === '') {\n      return toast.error('Write a request!');\n    }\n    setFilm(value);\n    setSearchParams({ query: value });\n\n    reset();\n  };\n\n  const reset = () => {\n    setValue('');\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (query) {\n      setFilm(query);\n    }\n    if (film) {\n      fetchQuery(\n        `https://api.themoviedb.org/3/search/movie?query=${film}&api_key=76a565cd635ec9567aa9794e25759f83`\n      )\n        .then(response => {\n          setSearchResult([...response.results]);\n        })\n        .catch(() => {\n          console.log('error');\n        });\n      reset();\n    }\n  }, [searchParams, setSearchParams, film]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={value}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {[searchResult.length] &&\n          searchResult.map(item => <GalleryItem key={item.id} item={item} />)}\n      </ul>\n    </>\n  );\n};\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","async function fetchQuery(query) {\n  const response = await fetch(query);\n  if (response.ok) {\n    return response.json();\n  }\n  return await Promise.reject(new Error('error'));\n}\nexport default fetchQuery;\n"],"names":["Input","styled","GalleryItem","lazy","useState","value","setValue","film","setFilm","searchResult","setSearchResult","useSearchParams","searchParams","setSearchParams","reset","useEffect","query","get","fetchQuery","then","response","results","catch","console","log","onSubmit","e","preventDefault","trim","toast","type","autoComplete","onChange","currentTarget","length","map","item","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","fetch","ok","json","Error"],"sourceRoot":""}