{"version":3,"file":"static/js/170.fa3d08a6.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","servises/fetchQuery.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Block = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding-top: 20px;\n  padding-left: 20px;\n`;\n\nexport const Nav = styled.nav`\n  display: flex;\n  gap: 20px;\n`;\nexport const BtnBlock = styled.nav`\n  margin-bottom: 20px;\n`;\nexport const InfoBlock = styled.div`\n  display: flex;\n  gap: 50px;\n`;\nexport const Info = styled.p`\n  max-width: 1250px;\n`;\n","import { useEffect, useState, useRef, Suspense } from 'react';\nimport { Outlet, useParams, NavLink, useLocation } from 'react-router-dom';\nimport fetchQuery from 'servises/fetchQuery';\nimport notFound from 'images/notFound.png';\nimport {\n  Block,\n  BtnBlock,\n  InfoBlock,\n  Info,\n} from 'components/MovieDetails/MovieDetails.styled';\nimport { Img } from 'components/App/App.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [posterPath, setPosterPath] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [originalTitle, setoriginalTitle] = useState('');\n  const [overview, setOverview] = useState('');\n  const [voteAverage, setVoteAverage] = useState('');\n  const location = useLocation();\n\n  const valueRef = useRef(true);\n\n  useEffect(() => {\n    if (valueRef.current) {\n      fetchQuery(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=76a565cd635ec9567aa9794e25759f83`\n      )\n        .then(response => {\n          setPosterPath(response.poster_path);\n          setGenres([...response.genres]);\n          setoriginalTitle(response.original_title);\n          setOverview(response.overview);\n          setVoteAverage(response.vote_average);\n          valueRef.current = false;\n        })\n        .catch(() => {\n          console.log('Not found');\n        })\n        .finally();\n    }\n  }, [movieId]);\n\n  return (\n    <Block>\n      <BtnBlock>\n        <NavLink to={location.state?.from ?? '/'}>\n          <button>Back</button>\n        </NavLink>\n      </BtnBlock>\n      <InfoBlock>\n        <div>\n          {posterPath && (\n            <Img\n              src={'https://image.tmdb.org/t/p/w500' + posterPath}\n              alt={originalTitle}\n            />\n          )}\n          {!posterPath && <Img src={notFound} alt={originalTitle} />}\n        </div>\n        <div>\n          <h1>{originalTitle || 'Not found'}</h1>\n          <p>{voteAverage || 'Not found'}</p>\n          <h2>Overview </h2>\n          <Info>{overview || 'Not found'}</Info>\n          <h2>Genres</h2>\n          <p>\n            {genres.map(item => (\n              <span key={item.name}>{item.name + ' ' || 'Not found'}</span>\n            ))}\n          </p>\n        </div>\n      </InfoBlock>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <NavLink to=\"cast\" state={{ from: location.state?.from }}>\n            Cast\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"reviews\" state={{ from: location.state?.from }}>\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Block>\n  );\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","async function fetchQuery(query) {\n  const response = await fetch(query);\n  if (response.ok) {\n    return response.json();\n  }\n  return await Promise.reject(new Error('error'));\n}\nexport default fetchQuery;\n"],"names":["Block","styled","BtnBlock","InfoBlock","Info","movieId","useParams","useState","posterPath","setPosterPath","genres","setGenres","originalTitle","setoriginalTitle","overview","setOverview","voteAverage","setVoteAverage","location","useLocation","valueRef","useRef","useEffect","current","fetchQuery","then","response","poster_path","original_title","vote_average","catch","console","log","finally","to","state","from","src","alt","notFound","map","item","name","Suspense","fallback","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","query","fetch","ok","json","Error"],"sourceRoot":""}